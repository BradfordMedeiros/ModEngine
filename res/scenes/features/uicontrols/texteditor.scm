
(enforce-layout (gameobj-id mainobj))


(define (updateText value)
  (gameobj-setattr! (lsobj-name ")sometext") 
    (list (list "value" value))
  )
)


(define currentText "")
(define (lessIndex) (max 0 (- (string-length currentText) 1)))
(define (onKey key scancode action mods)
  (format #t "key is ~a\n" key)
  (if (= action 1)
    (begin
      (if (= key 259)
        (set! currentText (substring currentText 0 (lessIndex)))
        (if (= key 257)
          (set! currentText (string-append currentText "\n"))
          (begin
            (format #t "key is ~a ~a\n" key (string (integer->char key)))
            (set! currentText (string-append currentText (string (integer->char key))))
          )
        )

      )
      (if (= key 345)
        (write-tofile)
      )
      (updateText currentText)
    )
  )
  (if (= key 340)
    (if (= action 1)
      (set! scrollhorizontal #t)
      (set! scrollhorizontal #f)
    )
  )
  
)

(define scrollhorizontal #f)
(define scrollspeed 0.5)
(define (scrollup)
  (define objattr (gameobj-attr (lsobj-name ")sometext")))
  (define yoffset (cadr (assoc "offsety" objattr)))
  (gameobj-setattr! (lsobj-name ")sometext") 
    (list (list "offsety" (+ yoffset scrollspeed)))
  ) 
)
(define (scrolldown)
  (define objattr (gameobj-attr (lsobj-name ")sometext")))
  (define yoffset (cadr (assoc "offsety" objattr)))
  (define newoffset (max 0 (- yoffset scrollspeed)))
  (gameobj-setattr! (lsobj-name ")sometext") 
    (list (list "offsety" newoffset))
  ) 
)

(define (scrollright)
  (define objattr (gameobj-attr (lsobj-name ")sometext")))
  (define xoffset (cadr (assoc "offsetx" objattr)))
  (gameobj-setattr! (lsobj-name ")sometext") 
    (list (list "offsetx" (+ xoffset scrollspeed)))
  ) 
)
(define (scrollleft)
  (define objattr (gameobj-attr (lsobj-name ")sometext")))
  (define xoffset (cadr (assoc "offsetx" objattr)))
  (define newoffset (max 0 (- xoffset scrollspeed)))
  (gameobj-setattr! (lsobj-name ")sometext") 
    (list (list "offsetx" newoffset))
  ) 
)

(define (onScroll amount)
  (if scrollhorizontal
    (if (> amount 0)
      (scrollright)
      (scrollleft)
    )
    (if (> amount 0)
      (scrollup)
      (scrolldown)
    )
  )
)
;; 264/ 265 up down arrow


(define (write-tofile)
  (let ((output-port (open-file "modtext.txt" "w")))
    (display currentText output-port)
    (newline output-port)
    (close output-port)
  )
)
